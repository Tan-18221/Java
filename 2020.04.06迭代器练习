package ta.j;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

/*
迭代器（对集合进行遍历）
两个常用的方法
boolean hasNext()如果仍有元素可以迭代，则返回true
E next()返回迭代的下一个元素
取出集合中下一个元素
迭代器是一个接口，无法直接使用，需要使用接口实现类对象，获取实现类方式特殊
collection接口中有一个方法叫做iterator(),这个方法返回的就是迭代器实现类对象
Iterator<E> iterator()
迭代器使用
1.先使用集合中的方法获取迭代器 iterator()获取迭代器的实现类对象，使用Iterator接口来接受
2.使用Iterator接口中的方法hasNext判断还有没有下一个元素
3.使用Iterator接口中的方法next取出集合中的下一个元素
利用while循环一直取出
结束条件是
hasNext返回false
 */
public class data {
    public static void main(String[] args) {
        Collection<String> co=new ArrayList<>();
        co.add("bjb");
        co.add("bpb");
        co.add("pjb");
        co.add("blb");
        co.add("bhb");
        Iterator<String> it = co.iterator();
        boolean b = it.hasNext();
        System.out.println(b);
        String d = it.next();
        System.out.println(d);
    }

}
